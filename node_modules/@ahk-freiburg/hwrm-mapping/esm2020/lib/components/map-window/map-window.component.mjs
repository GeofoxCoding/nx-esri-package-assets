import { Component, ChangeDetectionStrategy, Inject } from '@angular/core';
import esriConfig from '@arcgis/core/config';
import WebMap from '@arcgis/core/WebMap';
import MapView from '@arcgis/core/views/MapView';
import { MappingModuleConfigurationToken } from '../../mapping.module.configuration';
import * as i0 from "@angular/core";
export class MapWindowComponent {
    constructor(config) {
        this.config = config;
    }
    ngOnInit() {
        // Consuming app can pass a local asset path otherwise assets will be
        // puled from CDN
        if (this.config.assetPath)
            esriConfig.assetsPath = this.config.assetPath;
        const webMap = new WebMap({
            basemap: "streets-vector"
        });
        const view = new MapView({
            container: 'map',
            map: webMap
        });
    }
}
MapWindowComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.7", ngImport: i0, type: MapWindowComponent, deps: [{ token: MappingModuleConfigurationToken }], target: i0.ɵɵFactoryTarget.Component });
MapWindowComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.2.7", type: MapWindowComponent, selector: "hwrm-mapping-map-window", ngImport: i0, template: "<div id=\"map\"></div>", styles: ["#map{width:inherit;height:inherit}\n"], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.7", ngImport: i0, type: MapWindowComponent, decorators: [{
            type: Component,
            args: [{ selector: 'hwrm-mapping-map-window', changeDetection: ChangeDetectionStrategy.OnPush, template: "<div id=\"map\"></div>", styles: ["#map{width:inherit;height:inherit}\n"] }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [MappingModuleConfigurationToken]
                }] }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFwLXdpbmRvdy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL21hcHBpbmcvc3JjL2xpYi9jb21wb25lbnRzL21hcC13aW5kb3cvbWFwLXdpbmRvdy5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL21hcHBpbmcvc3JjL2xpYi9jb21wb25lbnRzL21hcC13aW5kb3cvbWFwLXdpbmRvdy5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLHVCQUF1QixFQUFTLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMxRixPQUFPLFVBQVUsTUFBTSxxQkFBcUIsQ0FBQztBQUM3QyxPQUFPLE1BQU0sTUFBTSxxQkFBcUIsQ0FBQztBQUN6QyxPQUFPLE9BQU8sTUFBTSw0QkFBNEIsQ0FBQztBQUNqRCxPQUFPLEVBQThCLCtCQUErQixFQUFFLE1BQU0sb0NBQW9DLENBQUM7O0FBUWpILE1BQU0sT0FBTyxrQkFBa0I7SUFFN0IsWUFBNkQsTUFBa0M7UUFBbEMsV0FBTSxHQUFOLE1BQU0sQ0FBNEI7SUFFL0YsQ0FBQztJQUVELFFBQVE7UUFFTixxRUFBcUU7UUFDckUsaUJBQWlCO1FBQ2pCLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxTQUFTO1lBQ3ZCLFVBQVUsQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUM7UUFFaEQsTUFBTSxNQUFNLEdBQUcsSUFBSSxNQUFNLENBQUM7WUFDeEIsT0FBTyxFQUFFLGdCQUFnQjtTQUMxQixDQUFDLENBQUM7UUFFSCxNQUFNLElBQUksR0FBRyxJQUFJLE9BQU8sQ0FBQztZQUNyQixTQUFTLEVBQUUsS0FBSztZQUNoQixHQUFHLEVBQUUsTUFBTTtTQUNkLENBQUMsQ0FBQztJQUVMLENBQUM7OytHQXRCVSxrQkFBa0Isa0JBRVQsK0JBQStCO21HQUZ4QyxrQkFBa0IsK0RDWi9CLHdCQUFvQjsyRkRZUCxrQkFBa0I7a0JBTjlCLFNBQVM7K0JBQ0UseUJBQXlCLG1CQUdsQix1QkFBdUIsQ0FBQyxNQUFNOzswQkFJbEMsTUFBTTsyQkFBQywrQkFBK0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIElucHV0LCBJbmplY3QgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCBlc3JpQ29uZmlnIGZyb20gJ0BhcmNnaXMvY29yZS9jb25maWcnO1xuaW1wb3J0IFdlYk1hcCBmcm9tICdAYXJjZ2lzL2NvcmUvV2ViTWFwJztcbmltcG9ydCBNYXBWaWV3IGZyb20gJ0BhcmNnaXMvY29yZS92aWV3cy9NYXBWaWV3JztcbmltcG9ydCB7IE1hcHBpbmdNb2R1bGVDb25maWd1cmF0aW9uLCBNYXBwaW5nTW9kdWxlQ29uZmlndXJhdGlvblRva2VuIH0gZnJvbSAnLi4vLi4vbWFwcGluZy5tb2R1bGUuY29uZmlndXJhdGlvbic7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2h3cm0tbWFwcGluZy1tYXAtd2luZG93JyxcbiAgdGVtcGxhdGVVcmw6ICcuL21hcC13aW5kb3cuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9tYXAtd2luZG93LmNvbXBvbmVudC5zY3NzJ10sXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoXG59KVxuZXhwb3J0IGNsYXNzIE1hcFdpbmRvd0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG5cbiAgY29uc3RydWN0b3IoQEluamVjdChNYXBwaW5nTW9kdWxlQ29uZmlndXJhdGlvblRva2VuKSBwcml2YXRlIGNvbmZpZzogTWFwcGluZ01vZHVsZUNvbmZpZ3VyYXRpb24pIHtcblxuICB9XG5cbiAgbmdPbkluaXQoKTogdm9pZCB7XG5cbiAgICAvLyBDb25zdW1pbmcgYXBwIGNhbiBwYXNzIGEgbG9jYWwgYXNzZXQgcGF0aCBvdGhlcndpc2UgYXNzZXRzIHdpbGwgYmVcbiAgICAvLyBwdWxlZCBmcm9tIENETlxuICAgIGlmICh0aGlzLmNvbmZpZy5hc3NldFBhdGgpXG4gICAgICBlc3JpQ29uZmlnLmFzc2V0c1BhdGggPSB0aGlzLmNvbmZpZy5hc3NldFBhdGg7XG5cbiAgICBjb25zdCB3ZWJNYXAgPSBuZXcgV2ViTWFwKHtcbiAgICAgIGJhc2VtYXA6IFwic3RyZWV0cy12ZWN0b3JcIlxuICAgIH0pO1xuXG4gICAgY29uc3QgdmlldyA9IG5ldyBNYXBWaWV3KHtcbiAgICAgICAgY29udGFpbmVyOiAnbWFwJyxcbiAgICAgICAgbWFwOiB3ZWJNYXBcbiAgICB9KTtcblxuICB9XG5cbn1cbiIsIjxkaXYgaWQ9XCJtYXBcIj48L2Rpdj4iXX0=